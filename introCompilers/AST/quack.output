Terminals unused in grammar

   AND
   OR
   NOT
   DIF


State 14 conflicts: 1 shift/reduce
State 32 conflicts: 4 shift/reduce
State 36 conflicts: 12 shift/reduce
State 66 conflicts: 4 shift/reduce
State 67 conflicts: 4 shift/reduce
State 68 conflicts: 4 shift/reduce
State 69 conflicts: 12 shift/reduce
State 70 conflicts: 4 shift/reduce
State 71 conflicts: 4 shift/reduce
State 72 conflicts: 4 shift/reduce
State 73 conflicts: 4 shift/reduce
State 74 conflicts: 4 shift/reduce
State 75 conflicts: 12 shift/reduce
State 76 conflicts: 12 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: Classes Statements

    2 Classes: %empty
    3        | Classes Class

    4 Statements: %empty
    5           | Statements Statement

    6 Class: Class_Signature Class_Body

    7 Class_Signature: "class" IDENT "(" Formal_Args ")" Class_Sig_Extends

    8 Class_Sig_Extends: %empty
    9                  | EXTENDS IDENT

   10 Formal_Args: %empty
   11            | "," IDENT ":" IDENT Formal_Args
   12            | IDENT ":" IDENT Formal_Args

   13 Class_Body: "{" Statements Methods "}"

   14 Statement: WHILE R_Expr Statement_Block
   15          | IF R_Expr Statement_Block Elifs Else
   16          | Statement_Block
   17          | L_Expr "=" R_Expr ";"
   18          | L_Expr ":" IDENT "=" R_Expr ";"
   19          | R_Expr ";"
   20          | RETURN ";"
   21          | RETURN R_Expr ";"

   22 Elifs: %empty
   23      | ELIF R_Expr Statement_Block Elifs

   24 Else: %empty
   25     | ELSE Statement_Block

   26 Statement_Block: "{" "}"
   27                | "{" Statements "}"

   28 Methods: %empty
   29        | Methods Method

   30 Method: DEF IDENT "(" Formal_Args ")" Method_Opt Statement_Block

   31 Method_Opt: %empty
   32           | ":" IDENT

   33 L_Expr: IDENT
   34       | R_Expr "." IDENT

   35 R_Expr: STRING_LIT
   36       | INT_LIT
   37       | L_Expr
   38       | R_Expr "+" R_Expr
   39       | R_Expr "-" R_Expr
   40       | R_Expr "*" R_Expr
   41       | R_Expr "/" R_Expr
   42       | "-" R_Expr
   43       | R_Expr "==" R_Expr
   44       | R_Expr "<=" R_Expr
   45       | R_Expr "<" R_Expr
   46       | R_Expr ">=" R_Expr
   47       | R_Expr ">" R_Expr
   48       | R_Expr "AND" R_Expr
   49       | R_Expr "OR" R_Expr
   50       | "NOT" R_Expr
   51       | R_Expr "." IDENT "(" Actual_Args ")"
   52       | IDENT "(" Actual_Args ")"
   53       | "(" R_Expr ")"

   54 Actual_Args: %empty
   55            | R_Expr R_Exprs

   56 R_Exprs: %empty
   57        | "," R_Expr


Terminals, with rules where they appear

$end (0) 0
error (256)
"class" (258) 7
DEF (259) 30
EXTENDS (260) 9
ELIF (261) 23
ELSE (262) 25
WHILE (263) 14
RETURN (264) 20 21
IF (265) 15
AND (266)
OR (267)
NOT (268)
";" (269) 17 18 19 20 21
":" (270) 11 12 18 32
"(" (271) 7 30 51 52 53
")" (272) 7 30 51 52 53
"." (273) 34 51
"," (274) 11 57
"+" (275) 38
"-" (276) 39 42
"*" (277) 40
"/" (278) 41
"==" (279) 43
"<=" (280) 44
">=" (281) 46
"<" (282) 45
">" (283) 47
"=" (284) 17 18
"{" (285) 13 26 27
"}" (286) 13 26 27
DIF (287)
IDENT (288) 7 9 11 12 18 30 32 33 34 51 52
INT_LIT (289) 36
STRING_LIT (290) 35
"AND" (291) 48
"OR" (292) 49
"NOT" (293) 50


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
Program (40)
    on left: 1, on right: 0
Classes (41)
    on left: 2 3, on right: 1 3
Statements (42)
    on left: 4 5, on right: 1 5 13 27
Class (43)
    on left: 6, on right: 3
Class_Signature (44)
    on left: 7, on right: 6
Class_Sig_Extends (45)
    on left: 8 9, on right: 7
Formal_Args (46)
    on left: 10 11 12, on right: 7 11 12 30
Class_Body (47)
    on left: 13, on right: 6
Statement (48)
    on left: 14 15 16 17 18 19 20 21, on right: 5
Elifs (49)
    on left: 22 23, on right: 15 23
Else (50)
    on left: 24 25, on right: 15
Statement_Block (51)
    on left: 26 27, on right: 14 15 16 23 25 30
Methods (52)
    on left: 28 29, on right: 13 29
Method (53)
    on left: 30, on right: 29
Method_Opt (54)
    on left: 31 32, on right: 30
L_Expr (55)
    on left: 33 34, on right: 17 18 37
R_Expr (56)
    on left: 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52
    53, on right: 14 15 17 18 19 21 23 34 38 39 40 41 42 43 44 45 46
    47 48 49 50 51 53 55 57
Actual_Args (57)
    on left: 54 55, on right: 51 52
R_Exprs (58)
    on left: 56 57, on right: 55


State 0

    0 $accept: . Program $end

    $default  reduce using rule 2 (Classes)

    Program  go to state 1
    Classes  go to state 2


State 1

    0 $accept: Program . $end

    $end  shift, and go to state 3


State 2

    1 Program: Classes . Statements
    3 Classes: Classes . Class

    "class"  shift, and go to state 4

    $default  reduce using rule 4 (Statements)

    Statements       go to state 5
    Class            go to state 6
    Class_Signature  go to state 7


State 3

    0 $accept: Program $end .

    $default  accept


State 4

    7 Class_Signature: "class" . IDENT "(" Formal_Args ")" Class_Sig_Extends

    IDENT  shift, and go to state 8


State 5

    1 Program: Classes Statements .
    5 Statements: Statements . Statement

    WHILE       shift, and go to state 9
    RETURN      shift, and go to state 10
    IF          shift, and go to state 11
    "("         shift, and go to state 12
    "-"         shift, and go to state 13
    "{"         shift, and go to state 14
    IDENT       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    STRING_LIT  shift, and go to state 17
    "NOT"       shift, and go to state 18

    $default  reduce using rule 1 (Program)

    Statement        go to state 19
    Statement_Block  go to state 20
    L_Expr           go to state 21
    R_Expr           go to state 22


State 6

    3 Classes: Classes Class .

    $default  reduce using rule 3 (Classes)


State 7

    6 Class: Class_Signature . Class_Body

    "{"  shift, and go to state 23

    Class_Body  go to state 24


State 8

    7 Class_Signature: "class" IDENT . "(" Formal_Args ")" Class_Sig_Extends

    "("  shift, and go to state 25


State 9

   14 Statement: WHILE . R_Expr Statement_Block

    "("         shift, and go to state 12
    "-"         shift, and go to state 13
    IDENT       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    STRING_LIT  shift, and go to state 17
    "NOT"       shift, and go to state 18

    L_Expr  go to state 26
    R_Expr  go to state 27


State 10

   20 Statement: RETURN . ";"
   21          | RETURN . R_Expr ";"

    ";"         shift, and go to state 28
    "("         shift, and go to state 12
    "-"         shift, and go to state 13
    IDENT       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    STRING_LIT  shift, and go to state 17
    "NOT"       shift, and go to state 18

    L_Expr  go to state 26
    R_Expr  go to state 29


State 11

   15 Statement: IF . R_Expr Statement_Block Elifs Else

    "("         shift, and go to state 12
    "-"         shift, and go to state 13
    IDENT       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    STRING_LIT  shift, and go to state 17
    "NOT"       shift, and go to state 18

    L_Expr  go to state 26
    R_Expr  go to state 30


State 12

   53 R_Expr: "(" . R_Expr ")"

    "("         shift, and go to state 12
    "-"         shift, and go to state 13
    IDENT       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    STRING_LIT  shift, and go to state 17
    "NOT"       shift, and go to state 18

    L_Expr  go to state 26
    R_Expr  go to state 31


State 13

   42 R_Expr: "-" . R_Expr

    "("         shift, and go to state 12
    "-"         shift, and go to state 13
    IDENT       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    STRING_LIT  shift, and go to state 17
    "NOT"       shift, and go to state 18

    L_Expr  go to state 26
    R_Expr  go to state 32


State 14

   26 Statement_Block: "{" . "}"
   27                | "{" . Statements "}"

    "}"  shift, and go to state 33

    "}"       [reduce using rule 4 (Statements)]
    $default  reduce using rule 4 (Statements)

    Statements  go to state 34


State 15

   33 L_Expr: IDENT .
   52 R_Expr: IDENT . "(" Actual_Args ")"

    "("  shift, and go to state 35

    $default  reduce using rule 33 (L_Expr)


State 16

   36 R_Expr: INT_LIT .

    $default  reduce using rule 36 (R_Expr)


State 17

   35 R_Expr: STRING_LIT .

    $default  reduce using rule 35 (R_Expr)


State 18

   50 R_Expr: "NOT" . R_Expr

    "("         shift, and go to state 12
    "-"         shift, and go to state 13
    IDENT       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    STRING_LIT  shift, and go to state 17
    "NOT"       shift, and go to state 18

    L_Expr  go to state 26
    R_Expr  go to state 36


State 19

    5 Statements: Statements Statement .

    $default  reduce using rule 5 (Statements)


State 20

   16 Statement: Statement_Block .

    $default  reduce using rule 16 (Statement)


State 21

   17 Statement: L_Expr . "=" R_Expr ";"
   18          | L_Expr . ":" IDENT "=" R_Expr ";"
   37 R_Expr: L_Expr .

    ":"  shift, and go to state 37
    "="  shift, and go to state 38

    $default  reduce using rule 37 (R_Expr)


State 22

   19 Statement: R_Expr . ";"
   34 L_Expr: R_Expr . "." IDENT
   38 R_Expr: R_Expr . "+" R_Expr
   39       | R_Expr . "-" R_Expr
   40       | R_Expr . "*" R_Expr
   41       | R_Expr . "/" R_Expr
   43       | R_Expr . "==" R_Expr
   44       | R_Expr . "<=" R_Expr
   45       | R_Expr . "<" R_Expr
   46       | R_Expr . ">=" R_Expr
   47       | R_Expr . ">" R_Expr
   48       | R_Expr . "AND" R_Expr
   49       | R_Expr . "OR" R_Expr
   51       | R_Expr . "." IDENT "(" Actual_Args ")"

    ";"    shift, and go to state 39
    "."    shift, and go to state 40
    "+"    shift, and go to state 41
    "-"    shift, and go to state 42
    "*"    shift, and go to state 43
    "/"    shift, and go to state 44
    "=="   shift, and go to state 45
    "<="   shift, and go to state 46
    ">="   shift, and go to state 47
    "<"    shift, and go to state 48
    ">"    shift, and go to state 49
    "AND"  shift, and go to state 50
    "OR"   shift, and go to state 51


State 23

   13 Class_Body: "{" . Statements Methods "}"

    $default  reduce using rule 4 (Statements)

    Statements  go to state 52


State 24

    6 Class: Class_Signature Class_Body .

    $default  reduce using rule 6 (Class)


State 25

    7 Class_Signature: "class" IDENT "(" . Formal_Args ")" Class_Sig_Extends

    ","    shift, and go to state 53
    IDENT  shift, and go to state 54

    $default  reduce using rule 10 (Formal_Args)

    Formal_Args  go to state 55


State 26

   37 R_Expr: L_Expr .

    $default  reduce using rule 37 (R_Expr)


State 27

   14 Statement: WHILE R_Expr . Statement_Block
   34 L_Expr: R_Expr . "." IDENT
   38 R_Expr: R_Expr . "+" R_Expr
   39       | R_Expr . "-" R_Expr
   40       | R_Expr . "*" R_Expr
   41       | R_Expr . "/" R_Expr
   43       | R_Expr . "==" R_Expr
   44       | R_Expr . "<=" R_Expr
   45       | R_Expr . "<" R_Expr
   46       | R_Expr . ">=" R_Expr
   47       | R_Expr . ">" R_Expr
   48       | R_Expr . "AND" R_Expr
   49       | R_Expr . "OR" R_Expr
   51       | R_Expr . "." IDENT "(" Actual_Args ")"

    "."    shift, and go to state 40
    "+"    shift, and go to state 41
    "-"    shift, and go to state 42
    "*"    shift, and go to state 43
    "/"    shift, and go to state 44
    "=="   shift, and go to state 45
    "<="   shift, and go to state 46
    ">="   shift, and go to state 47
    "<"    shift, and go to state 48
    ">"    shift, and go to state 49
    "{"    shift, and go to state 14
    "AND"  shift, and go to state 50
    "OR"   shift, and go to state 51

    Statement_Block  go to state 56


State 28

   20 Statement: RETURN ";" .

    $default  reduce using rule 20 (Statement)


State 29

   21 Statement: RETURN R_Expr . ";"
   34 L_Expr: R_Expr . "." IDENT
   38 R_Expr: R_Expr . "+" R_Expr
   39       | R_Expr . "-" R_Expr
   40       | R_Expr . "*" R_Expr
   41       | R_Expr . "/" R_Expr
   43       | R_Expr . "==" R_Expr
   44       | R_Expr . "<=" R_Expr
   45       | R_Expr . "<" R_Expr
   46       | R_Expr . ">=" R_Expr
   47       | R_Expr . ">" R_Expr
   48       | R_Expr . "AND" R_Expr
   49       | R_Expr . "OR" R_Expr
   51       | R_Expr . "." IDENT "(" Actual_Args ")"

    ";"    shift, and go to state 57
    "."    shift, and go to state 40
    "+"    shift, and go to state 41
    "-"    shift, and go to state 42
    "*"    shift, and go to state 43
    "/"    shift, and go to state 44
    "=="   shift, and go to state 45
    "<="   shift, and go to state 46
    ">="   shift, and go to state 47
    "<"    shift, and go to state 48
    ">"    shift, and go to state 49
    "AND"  shift, and go to state 50
    "OR"   shift, and go to state 51


State 30

   15 Statement: IF R_Expr . Statement_Block Elifs Else
   34 L_Expr: R_Expr . "." IDENT
   38 R_Expr: R_Expr . "+" R_Expr
   39       | R_Expr . "-" R_Expr
   40       | R_Expr . "*" R_Expr
   41       | R_Expr . "/" R_Expr
   43       | R_Expr . "==" R_Expr
   44       | R_Expr . "<=" R_Expr
   45       | R_Expr . "<" R_Expr
   46       | R_Expr . ">=" R_Expr
   47       | R_Expr . ">" R_Expr
   48       | R_Expr . "AND" R_Expr
   49       | R_Expr . "OR" R_Expr
   51       | R_Expr . "." IDENT "(" Actual_Args ")"

    "."    shift, and go to state 40
    "+"    shift, and go to state 41
    "-"    shift, and go to state 42
    "*"    shift, and go to state 43
    "/"    shift, and go to state 44
    "=="   shift, and go to state 45
    "<="   shift, and go to state 46
    ">="   shift, and go to state 47
    "<"    shift, and go to state 48
    ">"    shift, and go to state 49
    "{"    shift, and go to state 14
    "AND"  shift, and go to state 50
    "OR"   shift, and go to state 51

    Statement_Block  go to state 58


State 31

   34 L_Expr: R_Expr . "." IDENT
   38 R_Expr: R_Expr . "+" R_Expr
   39       | R_Expr . "-" R_Expr
   40       | R_Expr . "*" R_Expr
   41       | R_Expr . "/" R_Expr
   43       | R_Expr . "==" R_Expr
   44       | R_Expr . "<=" R_Expr
   45       | R_Expr . "<" R_Expr
   46       | R_Expr . ">=" R_Expr
   47       | R_Expr . ">" R_Expr
   48       | R_Expr . "AND" R_Expr
   49       | R_Expr . "OR" R_Expr
   51       | R_Expr . "." IDENT "(" Actual_Args ")"
   53       | "(" R_Expr . ")"

    ")"    shift, and go to state 59
    "."    shift, and go to state 40
    "+"    shift, and go to state 41
    "-"    shift, and go to state 42
    "*"    shift, and go to state 43
    "/"    shift, and go to state 44
    "=="   shift, and go to state 45
    "<="   shift, and go to state 46
    ">="   shift, and go to state 47
    "<"    shift, and go to state 48
    ">"    shift, and go to state 49
    "AND"  shift, and go to state 50
    "OR"   shift, and go to state 51


State 32

   34 L_Expr: R_Expr . "." IDENT
   38 R_Expr: R_Expr . "+" R_Expr
   39       | R_Expr . "-" R_Expr
   40       | R_Expr . "*" R_Expr
   41       | R_Expr . "/" R_Expr
   42       | "-" R_Expr .
   43       | R_Expr . "==" R_Expr
   44       | R_Expr . "<=" R_Expr
   45       | R_Expr . "<" R_Expr
   46       | R_Expr . ">=" R_Expr
   47       | R_Expr . ">" R_Expr
   48       | R_Expr . "AND" R_Expr
   49       | R_Expr . "OR" R_Expr
   51       | R_Expr . "." IDENT "(" Actual_Args ")"

    "."    shift, and go to state 40
    "*"    shift, and go to state 43
    "/"    shift, and go to state 44
    "=="   shift, and go to state 45
    "AND"  shift, and go to state 50
    "OR"   shift, and go to state 51

    "."       [reduce using rule 42 (R_Expr)]
    "/"       [reduce using rule 42 (R_Expr)]
    "AND"     [reduce using rule 42 (R_Expr)]
    "OR"      [reduce using rule 42 (R_Expr)]
    $default  reduce using rule 42 (R_Expr)


State 33

   26 Statement_Block: "{" "}" .

    $default  reduce using rule 26 (Statement_Block)


State 34

    5 Statements: Statements . Statement
   27 Statement_Block: "{" Statements . "}"

    WHILE       shift, and go to state 9
    RETURN      shift, and go to state 10
    IF          shift, and go to state 11
    "("         shift, and go to state 12
    "-"         shift, and go to state 13
    "{"         shift, and go to state 14
    "}"         shift, and go to state 60
    IDENT       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    STRING_LIT  shift, and go to state 17
    "NOT"       shift, and go to state 18

    Statement        go to state 19
    Statement_Block  go to state 20
    L_Expr           go to state 21
    R_Expr           go to state 22


State 35

   52 R_Expr: IDENT "(" . Actual_Args ")"

    "("         shift, and go to state 12
    "-"         shift, and go to state 13
    IDENT       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    STRING_LIT  shift, and go to state 17
    "NOT"       shift, and go to state 18

    $default  reduce using rule 54 (Actual_Args)

    L_Expr       go to state 26
    R_Expr       go to state 61
    Actual_Args  go to state 62


State 36

   34 L_Expr: R_Expr . "." IDENT
   38 R_Expr: R_Expr . "+" R_Expr
   39       | R_Expr . "-" R_Expr
   40       | R_Expr . "*" R_Expr
   41       | R_Expr . "/" R_Expr
   43       | R_Expr . "==" R_Expr
   44       | R_Expr . "<=" R_Expr
   45       | R_Expr . "<" R_Expr
   46       | R_Expr . ">=" R_Expr
   47       | R_Expr . ">" R_Expr
   48       | R_Expr . "AND" R_Expr
   49       | R_Expr . "OR" R_Expr
   50       | "NOT" R_Expr .
   51       | R_Expr . "." IDENT "(" Actual_Args ")"

    "."    shift, and go to state 40
    "+"    shift, and go to state 41
    "-"    shift, and go to state 42
    "*"    shift, and go to state 43
    "/"    shift, and go to state 44
    "=="   shift, and go to state 45
    "<="   shift, and go to state 46
    ">="   shift, and go to state 47
    "<"    shift, and go to state 48
    ">"    shift, and go to state 49
    "AND"  shift, and go to state 50
    "OR"   shift, and go to state 51

    "."       [reduce using rule 50 (R_Expr)]
    "+"       [reduce using rule 50 (R_Expr)]
    "-"       [reduce using rule 50 (R_Expr)]
    "*"       [reduce using rule 50 (R_Expr)]
    "/"       [reduce using rule 50 (R_Expr)]
    "=="      [reduce using rule 50 (R_Expr)]
    "<="      [reduce using rule 50 (R_Expr)]
    ">="      [reduce using rule 50 (R_Expr)]
    "<"       [reduce using rule 50 (R_Expr)]
    ">"       [reduce using rule 50 (R_Expr)]
    "AND"     [reduce using rule 50 (R_Expr)]
    "OR"      [reduce using rule 50 (R_Expr)]
    $default  reduce using rule 50 (R_Expr)


State 37

   18 Statement: L_Expr ":" . IDENT "=" R_Expr ";"

    IDENT  shift, and go to state 63


State 38

   17 Statement: L_Expr "=" . R_Expr ";"

    "("         shift, and go to state 12
    "-"         shift, and go to state 13
    IDENT       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    STRING_LIT  shift, and go to state 17
    "NOT"       shift, and go to state 18

    L_Expr  go to state 26
    R_Expr  go to state 64


State 39

   19 Statement: R_Expr ";" .

    $default  reduce using rule 19 (Statement)


State 40

   34 L_Expr: R_Expr "." . IDENT
   51 R_Expr: R_Expr "." . IDENT "(" Actual_Args ")"

    IDENT  shift, and go to state 65


State 41

   38 R_Expr: R_Expr "+" . R_Expr

    "("         shift, and go to state 12
    "-"         shift, and go to state 13
    IDENT       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    STRING_LIT  shift, and go to state 17
    "NOT"       shift, and go to state 18

    L_Expr  go to state 26
    R_Expr  go to state 66


State 42

   39 R_Expr: R_Expr "-" . R_Expr

    "("         shift, and go to state 12
    "-"         shift, and go to state 13
    IDENT       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    STRING_LIT  shift, and go to state 17
    "NOT"       shift, and go to state 18

    L_Expr  go to state 26
    R_Expr  go to state 67


State 43

   40 R_Expr: R_Expr "*" . R_Expr

    "("         shift, and go to state 12
    "-"         shift, and go to state 13
    IDENT       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    STRING_LIT  shift, and go to state 17
    "NOT"       shift, and go to state 18

    L_Expr  go to state 26
    R_Expr  go to state 68


State 44

   41 R_Expr: R_Expr "/" . R_Expr

    "("         shift, and go to state 12
    "-"         shift, and go to state 13
    IDENT       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    STRING_LIT  shift, and go to state 17
    "NOT"       shift, and go to state 18

    L_Expr  go to state 26
    R_Expr  go to state 69


State 45

   43 R_Expr: R_Expr "==" . R_Expr

    "("         shift, and go to state 12
    "-"         shift, and go to state 13
    IDENT       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    STRING_LIT  shift, and go to state 17
    "NOT"       shift, and go to state 18

    L_Expr  go to state 26
    R_Expr  go to state 70


State 46

   44 R_Expr: R_Expr "<=" . R_Expr

    "("         shift, and go to state 12
    "-"         shift, and go to state 13
    IDENT       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    STRING_LIT  shift, and go to state 17
    "NOT"       shift, and go to state 18

    L_Expr  go to state 26
    R_Expr  go to state 71


State 47

   46 R_Expr: R_Expr ">=" . R_Expr

    "("         shift, and go to state 12
    "-"         shift, and go to state 13
    IDENT       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    STRING_LIT  shift, and go to state 17
    "NOT"       shift, and go to state 18

    L_Expr  go to state 26
    R_Expr  go to state 72


State 48

   45 R_Expr: R_Expr "<" . R_Expr

    "("         shift, and go to state 12
    "-"         shift, and go to state 13
    IDENT       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    STRING_LIT  shift, and go to state 17
    "NOT"       shift, and go to state 18

    L_Expr  go to state 26
    R_Expr  go to state 73


State 49

   47 R_Expr: R_Expr ">" . R_Expr

    "("         shift, and go to state 12
    "-"         shift, and go to state 13
    IDENT       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    STRING_LIT  shift, and go to state 17
    "NOT"       shift, and go to state 18

    L_Expr  go to state 26
    R_Expr  go to state 74


State 50

   48 R_Expr: R_Expr "AND" . R_Expr

    "("         shift, and go to state 12
    "-"         shift, and go to state 13
    IDENT       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    STRING_LIT  shift, and go to state 17
    "NOT"       shift, and go to state 18

    L_Expr  go to state 26
    R_Expr  go to state 75


State 51

   49 R_Expr: R_Expr "OR" . R_Expr

    "("         shift, and go to state 12
    "-"         shift, and go to state 13
    IDENT       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    STRING_LIT  shift, and go to state 17
    "NOT"       shift, and go to state 18

    L_Expr  go to state 26
    R_Expr  go to state 76


State 52

    5 Statements: Statements . Statement
   13 Class_Body: "{" Statements . Methods "}"

    WHILE       shift, and go to state 9
    RETURN      shift, and go to state 10
    IF          shift, and go to state 11
    "("         shift, and go to state 12
    "-"         shift, and go to state 13
    "{"         shift, and go to state 14
    IDENT       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    STRING_LIT  shift, and go to state 17
    "NOT"       shift, and go to state 18

    $default  reduce using rule 28 (Methods)

    Statement        go to state 19
    Statement_Block  go to state 20
    Methods          go to state 77
    L_Expr           go to state 21
    R_Expr           go to state 22


State 53

   11 Formal_Args: "," . IDENT ":" IDENT Formal_Args

    IDENT  shift, and go to state 78


State 54

   12 Formal_Args: IDENT . ":" IDENT Formal_Args

    ":"  shift, and go to state 79


State 55

    7 Class_Signature: "class" IDENT "(" Formal_Args . ")" Class_Sig_Extends

    ")"  shift, and go to state 80


State 56

   14 Statement: WHILE R_Expr Statement_Block .

    $default  reduce using rule 14 (Statement)


State 57

   21 Statement: RETURN R_Expr ";" .

    $default  reduce using rule 21 (Statement)


State 58

   15 Statement: IF R_Expr Statement_Block . Elifs Else

    ELIF  shift, and go to state 81

    $default  reduce using rule 22 (Elifs)

    Elifs  go to state 82


State 59

   53 R_Expr: "(" R_Expr ")" .

    $default  reduce using rule 53 (R_Expr)


State 60

   27 Statement_Block: "{" Statements "}" .

    $default  reduce using rule 27 (Statement_Block)


State 61

   34 L_Expr: R_Expr . "." IDENT
   38 R_Expr: R_Expr . "+" R_Expr
   39       | R_Expr . "-" R_Expr
   40       | R_Expr . "*" R_Expr
   41       | R_Expr . "/" R_Expr
   43       | R_Expr . "==" R_Expr
   44       | R_Expr . "<=" R_Expr
   45       | R_Expr . "<" R_Expr
   46       | R_Expr . ">=" R_Expr
   47       | R_Expr . ">" R_Expr
   48       | R_Expr . "AND" R_Expr
   49       | R_Expr . "OR" R_Expr
   51       | R_Expr . "." IDENT "(" Actual_Args ")"
   55 Actual_Args: R_Expr . R_Exprs

    "."    shift, and go to state 40
    ","    shift, and go to state 83
    "+"    shift, and go to state 41
    "-"    shift, and go to state 42
    "*"    shift, and go to state 43
    "/"    shift, and go to state 44
    "=="   shift, and go to state 45
    "<="   shift, and go to state 46
    ">="   shift, and go to state 47
    "<"    shift, and go to state 48
    ">"    shift, and go to state 49
    "AND"  shift, and go to state 50
    "OR"   shift, and go to state 51

    $default  reduce using rule 56 (R_Exprs)

    R_Exprs  go to state 84


State 62

   52 R_Expr: IDENT "(" Actual_Args . ")"

    ")"  shift, and go to state 85


State 63

   18 Statement: L_Expr ":" IDENT . "=" R_Expr ";"

    "="  shift, and go to state 86


State 64

   17 Statement: L_Expr "=" R_Expr . ";"
   34 L_Expr: R_Expr . "." IDENT
   38 R_Expr: R_Expr . "+" R_Expr
   39       | R_Expr . "-" R_Expr
   40       | R_Expr . "*" R_Expr
   41       | R_Expr . "/" R_Expr
   43       | R_Expr . "==" R_Expr
   44       | R_Expr . "<=" R_Expr
   45       | R_Expr . "<" R_Expr
   46       | R_Expr . ">=" R_Expr
   47       | R_Expr . ">" R_Expr
   48       | R_Expr . "AND" R_Expr
   49       | R_Expr . "OR" R_Expr
   51       | R_Expr . "." IDENT "(" Actual_Args ")"

    ";"    shift, and go to state 87
    "."    shift, and go to state 40
    "+"    shift, and go to state 41
    "-"    shift, and go to state 42
    "*"    shift, and go to state 43
    "/"    shift, and go to state 44
    "=="   shift, and go to state 45
    "<="   shift, and go to state 46
    ">="   shift, and go to state 47
    "<"    shift, and go to state 48
    ">"    shift, and go to state 49
    "AND"  shift, and go to state 50
    "OR"   shift, and go to state 51


State 65

   34 L_Expr: R_Expr "." IDENT .
   51 R_Expr: R_Expr "." IDENT . "(" Actual_Args ")"

    "("  shift, and go to state 88

    $default  reduce using rule 34 (L_Expr)


State 66

   34 L_Expr: R_Expr . "." IDENT
   38 R_Expr: R_Expr . "+" R_Expr
   38       | R_Expr "+" R_Expr .
   39       | R_Expr . "-" R_Expr
   40       | R_Expr . "*" R_Expr
   41       | R_Expr . "/" R_Expr
   43       | R_Expr . "==" R_Expr
   44       | R_Expr . "<=" R_Expr
   45       | R_Expr . "<" R_Expr
   46       | R_Expr . ">=" R_Expr
   47       | R_Expr . ">" R_Expr
   48       | R_Expr . "AND" R_Expr
   49       | R_Expr . "OR" R_Expr
   51       | R_Expr . "." IDENT "(" Actual_Args ")"

    "."    shift, and go to state 40
    "*"    shift, and go to state 43
    "/"    shift, and go to state 44
    "=="   shift, and go to state 45
    "AND"  shift, and go to state 50
    "OR"   shift, and go to state 51

    "."       [reduce using rule 38 (R_Expr)]
    "/"       [reduce using rule 38 (R_Expr)]
    "AND"     [reduce using rule 38 (R_Expr)]
    "OR"      [reduce using rule 38 (R_Expr)]
    $default  reduce using rule 38 (R_Expr)


State 67

   34 L_Expr: R_Expr . "." IDENT
   38 R_Expr: R_Expr . "+" R_Expr
   39       | R_Expr . "-" R_Expr
   39       | R_Expr "-" R_Expr .
   40       | R_Expr . "*" R_Expr
   41       | R_Expr . "/" R_Expr
   43       | R_Expr . "==" R_Expr
   44       | R_Expr . "<=" R_Expr
   45       | R_Expr . "<" R_Expr
   46       | R_Expr . ">=" R_Expr
   47       | R_Expr . ">" R_Expr
   48       | R_Expr . "AND" R_Expr
   49       | R_Expr . "OR" R_Expr
   51       | R_Expr . "." IDENT "(" Actual_Args ")"

    "."    shift, and go to state 40
    "*"    shift, and go to state 43
    "/"    shift, and go to state 44
    "=="   shift, and go to state 45
    "AND"  shift, and go to state 50
    "OR"   shift, and go to state 51

    "."       [reduce using rule 39 (R_Expr)]
    "/"       [reduce using rule 39 (R_Expr)]
    "AND"     [reduce using rule 39 (R_Expr)]
    "OR"      [reduce using rule 39 (R_Expr)]
    $default  reduce using rule 39 (R_Expr)


State 68

   34 L_Expr: R_Expr . "." IDENT
   38 R_Expr: R_Expr . "+" R_Expr
   39       | R_Expr . "-" R_Expr
   40       | R_Expr . "*" R_Expr
   40       | R_Expr "*" R_Expr .
   41       | R_Expr . "/" R_Expr
   43       | R_Expr . "==" R_Expr
   44       | R_Expr . "<=" R_Expr
   45       | R_Expr . "<" R_Expr
   46       | R_Expr . ">=" R_Expr
   47       | R_Expr . ">" R_Expr
   48       | R_Expr . "AND" R_Expr
   49       | R_Expr . "OR" R_Expr
   51       | R_Expr . "." IDENT "(" Actual_Args ")"

    "."    shift, and go to state 40
    "/"    shift, and go to state 44
    "=="   shift, and go to state 45
    "AND"  shift, and go to state 50
    "OR"   shift, and go to state 51

    "."       [reduce using rule 40 (R_Expr)]
    "/"       [reduce using rule 40 (R_Expr)]
    "AND"     [reduce using rule 40 (R_Expr)]
    "OR"      [reduce using rule 40 (R_Expr)]
    $default  reduce using rule 40 (R_Expr)


State 69

   34 L_Expr: R_Expr . "." IDENT
   38 R_Expr: R_Expr . "+" R_Expr
   39       | R_Expr . "-" R_Expr
   40       | R_Expr . "*" R_Expr
   41       | R_Expr . "/" R_Expr
   41       | R_Expr "/" R_Expr .
   43       | R_Expr . "==" R_Expr
   44       | R_Expr . "<=" R_Expr
   45       | R_Expr . "<" R_Expr
   46       | R_Expr . ">=" R_Expr
   47       | R_Expr . ">" R_Expr
   48       | R_Expr . "AND" R_Expr
   49       | R_Expr . "OR" R_Expr
   51       | R_Expr . "." IDENT "(" Actual_Args ")"

    "."    shift, and go to state 40
    "+"    shift, and go to state 41
    "-"    shift, and go to state 42
    "*"    shift, and go to state 43
    "/"    shift, and go to state 44
    "=="   shift, and go to state 45
    "<="   shift, and go to state 46
    ">="   shift, and go to state 47
    "<"    shift, and go to state 48
    ">"    shift, and go to state 49
    "AND"  shift, and go to state 50
    "OR"   shift, and go to state 51

    "."       [reduce using rule 41 (R_Expr)]
    "+"       [reduce using rule 41 (R_Expr)]
    "-"       [reduce using rule 41 (R_Expr)]
    "*"       [reduce using rule 41 (R_Expr)]
    "/"       [reduce using rule 41 (R_Expr)]
    "=="      [reduce using rule 41 (R_Expr)]
    "<="      [reduce using rule 41 (R_Expr)]
    ">="      [reduce using rule 41 (R_Expr)]
    "<"       [reduce using rule 41 (R_Expr)]
    ">"       [reduce using rule 41 (R_Expr)]
    "AND"     [reduce using rule 41 (R_Expr)]
    "OR"      [reduce using rule 41 (R_Expr)]
    $default  reduce using rule 41 (R_Expr)


State 70

   34 L_Expr: R_Expr . "." IDENT
   38 R_Expr: R_Expr . "+" R_Expr
   39       | R_Expr . "-" R_Expr
   40       | R_Expr . "*" R_Expr
   41       | R_Expr . "/" R_Expr
   43       | R_Expr . "==" R_Expr
   43       | R_Expr "==" R_Expr .
   44       | R_Expr . "<=" R_Expr
   45       | R_Expr . "<" R_Expr
   46       | R_Expr . ">=" R_Expr
   47       | R_Expr . ">" R_Expr
   48       | R_Expr . "AND" R_Expr
   49       | R_Expr . "OR" R_Expr
   51       | R_Expr . "." IDENT "(" Actual_Args ")"

    "."    shift, and go to state 40
    "/"    shift, and go to state 44
    "AND"  shift, and go to state 50
    "OR"   shift, and go to state 51

    "=="  error (nonassociative)

    "."       [reduce using rule 43 (R_Expr)]
    "/"       [reduce using rule 43 (R_Expr)]
    "AND"     [reduce using rule 43 (R_Expr)]
    "OR"      [reduce using rule 43 (R_Expr)]
    $default  reduce using rule 43 (R_Expr)


State 71

   34 L_Expr: R_Expr . "." IDENT
   38 R_Expr: R_Expr . "+" R_Expr
   39       | R_Expr . "-" R_Expr
   40       | R_Expr . "*" R_Expr
   41       | R_Expr . "/" R_Expr
   43       | R_Expr . "==" R_Expr
   44       | R_Expr . "<=" R_Expr
   44       | R_Expr "<=" R_Expr .
   45       | R_Expr . "<" R_Expr
   46       | R_Expr . ">=" R_Expr
   47       | R_Expr . ">" R_Expr
   48       | R_Expr . "AND" R_Expr
   49       | R_Expr . "OR" R_Expr
   51       | R_Expr . "." IDENT "(" Actual_Args ")"

    "."    shift, and go to state 40
    "+"    shift, and go to state 41
    "-"    shift, and go to state 42
    "*"    shift, and go to state 43
    "/"    shift, and go to state 44
    "=="   shift, and go to state 45
    "<="   shift, and go to state 46
    ">="   shift, and go to state 47
    "<"    shift, and go to state 48
    ">"    shift, and go to state 49
    "AND"  shift, and go to state 50
    "OR"   shift, and go to state 51

    "."       [reduce using rule 44 (R_Expr)]
    "/"       [reduce using rule 44 (R_Expr)]
    "AND"     [reduce using rule 44 (R_Expr)]
    "OR"      [reduce using rule 44 (R_Expr)]
    $default  reduce using rule 44 (R_Expr)


State 72

   34 L_Expr: R_Expr . "." IDENT
   38 R_Expr: R_Expr . "+" R_Expr
   39       | R_Expr . "-" R_Expr
   40       | R_Expr . "*" R_Expr
   41       | R_Expr . "/" R_Expr
   43       | R_Expr . "==" R_Expr
   44       | R_Expr . "<=" R_Expr
   45       | R_Expr . "<" R_Expr
   46       | R_Expr . ">=" R_Expr
   46       | R_Expr ">=" R_Expr .
   47       | R_Expr . ">" R_Expr
   48       | R_Expr . "AND" R_Expr
   49       | R_Expr . "OR" R_Expr
   51       | R_Expr . "." IDENT "(" Actual_Args ")"

    "."    shift, and go to state 40
    "+"    shift, and go to state 41
    "-"    shift, and go to state 42
    "*"    shift, and go to state 43
    "/"    shift, and go to state 44
    "=="   shift, and go to state 45
    "<="   shift, and go to state 46
    ">="   shift, and go to state 47
    "<"    shift, and go to state 48
    ">"    shift, and go to state 49
    "AND"  shift, and go to state 50
    "OR"   shift, and go to state 51

    "."       [reduce using rule 46 (R_Expr)]
    "/"       [reduce using rule 46 (R_Expr)]
    "AND"     [reduce using rule 46 (R_Expr)]
    "OR"      [reduce using rule 46 (R_Expr)]
    $default  reduce using rule 46 (R_Expr)


State 73

   34 L_Expr: R_Expr . "." IDENT
   38 R_Expr: R_Expr . "+" R_Expr
   39       | R_Expr . "-" R_Expr
   40       | R_Expr . "*" R_Expr
   41       | R_Expr . "/" R_Expr
   43       | R_Expr . "==" R_Expr
   44       | R_Expr . "<=" R_Expr
   45       | R_Expr . "<" R_Expr
   45       | R_Expr "<" R_Expr .
   46       | R_Expr . ">=" R_Expr
   47       | R_Expr . ">" R_Expr
   48       | R_Expr . "AND" R_Expr
   49       | R_Expr . "OR" R_Expr
   51       | R_Expr . "." IDENT "(" Actual_Args ")"

    "."    shift, and go to state 40
    "+"    shift, and go to state 41
    "-"    shift, and go to state 42
    "*"    shift, and go to state 43
    "/"    shift, and go to state 44
    "=="   shift, and go to state 45
    "<="   shift, and go to state 46
    ">="   shift, and go to state 47
    "<"    shift, and go to state 48
    ">"    shift, and go to state 49
    "AND"  shift, and go to state 50
    "OR"   shift, and go to state 51

    "."       [reduce using rule 45 (R_Expr)]
    "/"       [reduce using rule 45 (R_Expr)]
    "AND"     [reduce using rule 45 (R_Expr)]
    "OR"      [reduce using rule 45 (R_Expr)]
    $default  reduce using rule 45 (R_Expr)


State 74

   34 L_Expr: R_Expr . "." IDENT
   38 R_Expr: R_Expr . "+" R_Expr
   39       | R_Expr . "-" R_Expr
   40       | R_Expr . "*" R_Expr
   41       | R_Expr . "/" R_Expr
   43       | R_Expr . "==" R_Expr
   44       | R_Expr . "<=" R_Expr
   45       | R_Expr . "<" R_Expr
   46       | R_Expr . ">=" R_Expr
   47       | R_Expr . ">" R_Expr
   47       | R_Expr ">" R_Expr .
   48       | R_Expr . "AND" R_Expr
   49       | R_Expr . "OR" R_Expr
   51       | R_Expr . "." IDENT "(" Actual_Args ")"

    "."    shift, and go to state 40
    "+"    shift, and go to state 41
    "-"    shift, and go to state 42
    "*"    shift, and go to state 43
    "/"    shift, and go to state 44
    "=="   shift, and go to state 45
    "<="   shift, and go to state 46
    ">="   shift, and go to state 47
    "<"    shift, and go to state 48
    ">"    shift, and go to state 49
    "AND"  shift, and go to state 50
    "OR"   shift, and go to state 51

    "."       [reduce using rule 47 (R_Expr)]
    "/"       [reduce using rule 47 (R_Expr)]
    "AND"     [reduce using rule 47 (R_Expr)]
    "OR"      [reduce using rule 47 (R_Expr)]
    $default  reduce using rule 47 (R_Expr)


State 75

   34 L_Expr: R_Expr . "." IDENT
   38 R_Expr: R_Expr . "+" R_Expr
   39       | R_Expr . "-" R_Expr
   40       | R_Expr . "*" R_Expr
   41       | R_Expr . "/" R_Expr
   43       | R_Expr . "==" R_Expr
   44       | R_Expr . "<=" R_Expr
   45       | R_Expr . "<" R_Expr
   46       | R_Expr . ">=" R_Expr
   47       | R_Expr . ">" R_Expr
   48       | R_Expr . "AND" R_Expr
   48       | R_Expr "AND" R_Expr .
   49       | R_Expr . "OR" R_Expr
   51       | R_Expr . "." IDENT "(" Actual_Args ")"

    "."    shift, and go to state 40
    "+"    shift, and go to state 41
    "-"    shift, and go to state 42
    "*"    shift, and go to state 43
    "/"    shift, and go to state 44
    "=="   shift, and go to state 45
    "<="   shift, and go to state 46
    ">="   shift, and go to state 47
    "<"    shift, and go to state 48
    ">"    shift, and go to state 49
    "AND"  shift, and go to state 50
    "OR"   shift, and go to state 51

    "."       [reduce using rule 48 (R_Expr)]
    "+"       [reduce using rule 48 (R_Expr)]
    "-"       [reduce using rule 48 (R_Expr)]
    "*"       [reduce using rule 48 (R_Expr)]
    "/"       [reduce using rule 48 (R_Expr)]
    "=="      [reduce using rule 48 (R_Expr)]
    "<="      [reduce using rule 48 (R_Expr)]
    ">="      [reduce using rule 48 (R_Expr)]
    "<"       [reduce using rule 48 (R_Expr)]
    ">"       [reduce using rule 48 (R_Expr)]
    "AND"     [reduce using rule 48 (R_Expr)]
    "OR"      [reduce using rule 48 (R_Expr)]
    $default  reduce using rule 48 (R_Expr)


State 76

   34 L_Expr: R_Expr . "." IDENT
   38 R_Expr: R_Expr . "+" R_Expr
   39       | R_Expr . "-" R_Expr
   40       | R_Expr . "*" R_Expr
   41       | R_Expr . "/" R_Expr
   43       | R_Expr . "==" R_Expr
   44       | R_Expr . "<=" R_Expr
   45       | R_Expr . "<" R_Expr
   46       | R_Expr . ">=" R_Expr
   47       | R_Expr . ">" R_Expr
   48       | R_Expr . "AND" R_Expr
   49       | R_Expr . "OR" R_Expr
   49       | R_Expr "OR" R_Expr .
   51       | R_Expr . "." IDENT "(" Actual_Args ")"

    "."    shift, and go to state 40
    "+"    shift, and go to state 41
    "-"    shift, and go to state 42
    "*"    shift, and go to state 43
    "/"    shift, and go to state 44
    "=="   shift, and go to state 45
    "<="   shift, and go to state 46
    ">="   shift, and go to state 47
    "<"    shift, and go to state 48
    ">"    shift, and go to state 49
    "AND"  shift, and go to state 50
    "OR"   shift, and go to state 51

    "."       [reduce using rule 49 (R_Expr)]
    "+"       [reduce using rule 49 (R_Expr)]
    "-"       [reduce using rule 49 (R_Expr)]
    "*"       [reduce using rule 49 (R_Expr)]
    "/"       [reduce using rule 49 (R_Expr)]
    "=="      [reduce using rule 49 (R_Expr)]
    "<="      [reduce using rule 49 (R_Expr)]
    ">="      [reduce using rule 49 (R_Expr)]
    "<"       [reduce using rule 49 (R_Expr)]
    ">"       [reduce using rule 49 (R_Expr)]
    "AND"     [reduce using rule 49 (R_Expr)]
    "OR"      [reduce using rule 49 (R_Expr)]
    $default  reduce using rule 49 (R_Expr)


State 77

   13 Class_Body: "{" Statements Methods . "}"
   29 Methods: Methods . Method

    DEF  shift, and go to state 89
    "}"  shift, and go to state 90

    Method  go to state 91


State 78

   11 Formal_Args: "," IDENT . ":" IDENT Formal_Args

    ":"  shift, and go to state 92


State 79

   12 Formal_Args: IDENT ":" . IDENT Formal_Args

    IDENT  shift, and go to state 93


State 80

    7 Class_Signature: "class" IDENT "(" Formal_Args ")" . Class_Sig_Extends

    EXTENDS  shift, and go to state 94

    $default  reduce using rule 8 (Class_Sig_Extends)

    Class_Sig_Extends  go to state 95


State 81

   23 Elifs: ELIF . R_Expr Statement_Block Elifs

    "("         shift, and go to state 12
    "-"         shift, and go to state 13
    IDENT       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    STRING_LIT  shift, and go to state 17
    "NOT"       shift, and go to state 18

    L_Expr  go to state 26
    R_Expr  go to state 96


State 82

   15 Statement: IF R_Expr Statement_Block Elifs . Else

    ELSE  shift, and go to state 97

    $default  reduce using rule 24 (Else)

    Else  go to state 98


State 83

   57 R_Exprs: "," . R_Expr

    "("         shift, and go to state 12
    "-"         shift, and go to state 13
    IDENT       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    STRING_LIT  shift, and go to state 17
    "NOT"       shift, and go to state 18

    L_Expr  go to state 26
    R_Expr  go to state 99


State 84

   55 Actual_Args: R_Expr R_Exprs .

    $default  reduce using rule 55 (Actual_Args)


State 85

   52 R_Expr: IDENT "(" Actual_Args ")" .

    $default  reduce using rule 52 (R_Expr)


State 86

   18 Statement: L_Expr ":" IDENT "=" . R_Expr ";"

    "("         shift, and go to state 12
    "-"         shift, and go to state 13
    IDENT       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    STRING_LIT  shift, and go to state 17
    "NOT"       shift, and go to state 18

    L_Expr  go to state 26
    R_Expr  go to state 100


State 87

   17 Statement: L_Expr "=" R_Expr ";" .

    $default  reduce using rule 17 (Statement)


State 88

   51 R_Expr: R_Expr "." IDENT "(" . Actual_Args ")"

    "("         shift, and go to state 12
    "-"         shift, and go to state 13
    IDENT       shift, and go to state 15
    INT_LIT     shift, and go to state 16
    STRING_LIT  shift, and go to state 17
    "NOT"       shift, and go to state 18

    $default  reduce using rule 54 (Actual_Args)

    L_Expr       go to state 26
    R_Expr       go to state 61
    Actual_Args  go to state 101


State 89

   30 Method: DEF . IDENT "(" Formal_Args ")" Method_Opt Statement_Block

    IDENT  shift, and go to state 102


State 90

   13 Class_Body: "{" Statements Methods "}" .

    $default  reduce using rule 13 (Class_Body)


State 91

   29 Methods: Methods Method .

    $default  reduce using rule 29 (Methods)


State 92

   11 Formal_Args: "," IDENT ":" . IDENT Formal_Args

    IDENT  shift, and go to state 103


State 93

   12 Formal_Args: IDENT ":" IDENT . Formal_Args

    ","    shift, and go to state 53
    IDENT  shift, and go to state 54

    $default  reduce using rule 10 (Formal_Args)

    Formal_Args  go to state 104


State 94

    9 Class_Sig_Extends: EXTENDS . IDENT

    IDENT  shift, and go to state 105


State 95

    7 Class_Signature: "class" IDENT "(" Formal_Args ")" Class_Sig_Extends .

    $default  reduce using rule 7 (Class_Signature)


State 96

   23 Elifs: ELIF R_Expr . Statement_Block Elifs
   34 L_Expr: R_Expr . "." IDENT
   38 R_Expr: R_Expr . "+" R_Expr
   39       | R_Expr . "-" R_Expr
   40       | R_Expr . "*" R_Expr
   41       | R_Expr . "/" R_Expr
   43       | R_Expr . "==" R_Expr
   44       | R_Expr . "<=" R_Expr
   45       | R_Expr . "<" R_Expr
   46       | R_Expr . ">=" R_Expr
   47       | R_Expr . ">" R_Expr
   48       | R_Expr . "AND" R_Expr
   49       | R_Expr . "OR" R_Expr
   51       | R_Expr . "." IDENT "(" Actual_Args ")"

    "."    shift, and go to state 40
    "+"    shift, and go to state 41
    "-"    shift, and go to state 42
    "*"    shift, and go to state 43
    "/"    shift, and go to state 44
    "=="   shift, and go to state 45
    "<="   shift, and go to state 46
    ">="   shift, and go to state 47
    "<"    shift, and go to state 48
    ">"    shift, and go to state 49
    "{"    shift, and go to state 14
    "AND"  shift, and go to state 50
    "OR"   shift, and go to state 51

    Statement_Block  go to state 106


State 97

   25 Else: ELSE . Statement_Block

    "{"  shift, and go to state 14

    Statement_Block  go to state 107


State 98

   15 Statement: IF R_Expr Statement_Block Elifs Else .

    $default  reduce using rule 15 (Statement)


State 99

   34 L_Expr: R_Expr . "." IDENT
   38 R_Expr: R_Expr . "+" R_Expr
   39       | R_Expr . "-" R_Expr
   40       | R_Expr . "*" R_Expr
   41       | R_Expr . "/" R_Expr
   43       | R_Expr . "==" R_Expr
   44       | R_Expr . "<=" R_Expr
   45       | R_Expr . "<" R_Expr
   46       | R_Expr . ">=" R_Expr
   47       | R_Expr . ">" R_Expr
   48       | R_Expr . "AND" R_Expr
   49       | R_Expr . "OR" R_Expr
   51       | R_Expr . "." IDENT "(" Actual_Args ")"
   57 R_Exprs: "," R_Expr .

    "."    shift, and go to state 40
    "+"    shift, and go to state 41
    "-"    shift, and go to state 42
    "*"    shift, and go to state 43
    "/"    shift, and go to state 44
    "=="   shift, and go to state 45
    "<="   shift, and go to state 46
    ">="   shift, and go to state 47
    "<"    shift, and go to state 48
    ">"    shift, and go to state 49
    "AND"  shift, and go to state 50
    "OR"   shift, and go to state 51

    $default  reduce using rule 57 (R_Exprs)


State 100

   18 Statement: L_Expr ":" IDENT "=" R_Expr . ";"
   34 L_Expr: R_Expr . "." IDENT
   38 R_Expr: R_Expr . "+" R_Expr
   39       | R_Expr . "-" R_Expr
   40       | R_Expr . "*" R_Expr
   41       | R_Expr . "/" R_Expr
   43       | R_Expr . "==" R_Expr
   44       | R_Expr . "<=" R_Expr
   45       | R_Expr . "<" R_Expr
   46       | R_Expr . ">=" R_Expr
   47       | R_Expr . ">" R_Expr
   48       | R_Expr . "AND" R_Expr
   49       | R_Expr . "OR" R_Expr
   51       | R_Expr . "." IDENT "(" Actual_Args ")"

    ";"    shift, and go to state 108
    "."    shift, and go to state 40
    "+"    shift, and go to state 41
    "-"    shift, and go to state 42
    "*"    shift, and go to state 43
    "/"    shift, and go to state 44
    "=="   shift, and go to state 45
    "<="   shift, and go to state 46
    ">="   shift, and go to state 47
    "<"    shift, and go to state 48
    ">"    shift, and go to state 49
    "AND"  shift, and go to state 50
    "OR"   shift, and go to state 51


State 101

   51 R_Expr: R_Expr "." IDENT "(" Actual_Args . ")"

    ")"  shift, and go to state 109


State 102

   30 Method: DEF IDENT . "(" Formal_Args ")" Method_Opt Statement_Block

    "("  shift, and go to state 110


State 103

   11 Formal_Args: "," IDENT ":" IDENT . Formal_Args

    ","    shift, and go to state 53
    IDENT  shift, and go to state 54

    $default  reduce using rule 10 (Formal_Args)

    Formal_Args  go to state 111


State 104

   12 Formal_Args: IDENT ":" IDENT Formal_Args .

    $default  reduce using rule 12 (Formal_Args)


State 105

    9 Class_Sig_Extends: EXTENDS IDENT .

    $default  reduce using rule 9 (Class_Sig_Extends)


State 106

   23 Elifs: ELIF R_Expr Statement_Block . Elifs

    ELIF  shift, and go to state 81

    $default  reduce using rule 22 (Elifs)

    Elifs  go to state 112


State 107

   25 Else: ELSE Statement_Block .

    $default  reduce using rule 25 (Else)


State 108

   18 Statement: L_Expr ":" IDENT "=" R_Expr ";" .

    $default  reduce using rule 18 (Statement)


State 109

   51 R_Expr: R_Expr "." IDENT "(" Actual_Args ")" .

    $default  reduce using rule 51 (R_Expr)


State 110

   30 Method: DEF IDENT "(" . Formal_Args ")" Method_Opt Statement_Block

    ","    shift, and go to state 53
    IDENT  shift, and go to state 54

    $default  reduce using rule 10 (Formal_Args)

    Formal_Args  go to state 113


State 111

   11 Formal_Args: "," IDENT ":" IDENT Formal_Args .

    $default  reduce using rule 11 (Formal_Args)


State 112

   23 Elifs: ELIF R_Expr Statement_Block Elifs .

    $default  reduce using rule 23 (Elifs)


State 113

   30 Method: DEF IDENT "(" Formal_Args . ")" Method_Opt Statement_Block

    ")"  shift, and go to state 114


State 114

   30 Method: DEF IDENT "(" Formal_Args ")" . Method_Opt Statement_Block

    ":"  shift, and go to state 115

    $default  reduce using rule 31 (Method_Opt)

    Method_Opt  go to state 116


State 115

   32 Method_Opt: ":" . IDENT

    IDENT  shift, and go to state 117


State 116

   30 Method: DEF IDENT "(" Formal_Args ")" Method_Opt . Statement_Block

    "{"  shift, and go to state 14

    Statement_Block  go to state 118


State 117

   32 Method_Opt: ":" IDENT .

    $default  reduce using rule 32 (Method_Opt)


State 118

   30 Method: DEF IDENT "(" Formal_Args ")" Method_Opt Statement_Block .

    $default  reduce using rule 30 (Method)
